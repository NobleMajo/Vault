name: Go binary release

on:
  release:
    types: [created, edited]

permissions:
  contents: write
  packages: write

jobs:
  load-vars:
    name: Load build vars
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Set vars
        run: |
          echo "APP_VERSION=$(npm exec -c \"echo \\\$npm_package_version\")" >> "$GITHUB_ENV"
          echo "APP_COMMIT=$(git rev-parse --short HEAD)" >> "$GITHUB_ENV"

  releases-matrix:
    name: Release Go Binary
    needs: load-vars
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: ["linux", "darwin", "windows"]
        goarch: ["amd64", "386", "arm64"]
        exclude:
          - goarch: "386"
            goos: "darwin"
          - goarch: "arm64"
            goos: "windows"
    steps:
      - uses: actions/checkout@v4
      - uses: wangyoucao577/go-release-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          goversion: "1.22"
          binary_name: "vault"
          project_path: "./cmd"
          extra_files: LICENSE README.md
          ldflags: "-X main.Version=$APP_VERSION -X main.Commit=$APP_COMMIT"
